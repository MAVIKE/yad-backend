name: stage-CI-CD

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

env:
  REGISTRY: "registry.digitalocean.com/yad-backend"
  IMAGE_NAME: "yad-backend-stage"
  CONTAINER_NAME: "yad-backend-stage"
  LOGS_PATH: "/root/yad-backend-stage/api/logs/prod"

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.15'

      - name: Checkout develop
        uses: actions/checkout@v2

      - name: Run lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.26.0
          golangci-lint run
  swag:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.15'

      - name: Checkout develop
        uses: actions/checkout@v2

      - name: Generate swagger
        run: |
          go get -u github.com/swaggo/swag/cmd/swag
          make swag
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.15'

      - name: Checkout develop
        uses: actions/checkout@v2

      - name: Build app
        run:
          make build
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Checkout develop
        uses: actions/checkout@v2

      - name: Integration Tests
        run:
          make test
  build_and_push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: [lint, swag, build, test]

    steps:
      - name: Checkout develop
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) --build-arg MODE=stage .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: build_and_push

    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,CONTAINER_NAME
          script: |
            # Login into Digital Ocean Registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} $(echo $REGISTRY)

            # Set env variables
            export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            export ACCESS_KEY=${{ secrets.ACCESS_KEY }}
            export SECRET_KEY=${{ secrets.SECRET_KEY }}

            # Stop running container
            docker stop $(echo $CONTAINER_NAME)

            # Remove old container
            docker rm $(echo $CONTAINER_NAME)

            # Run a new container from a new image
            docker run \
            -v $(echo $LOGS_PATH):/logs -d \
            --restart always \
            --publish 9001:9000 \
            --name $(echo $CONTAINER_NAME) \
            --link=yad-backend-stage-db:db \
            -v stage-img:/img \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)